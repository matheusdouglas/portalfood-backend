generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// cria uma migration: yarn prisma migrate dev

model User {
  id         String     @id @default(uuid())
  name       String
  email      String
  password   String
  is_admin   Boolean    @default(false) // Define o padrão como false
  create_at  DateTime? @default(now())
  update_at  DateTime? @default(now())
  responsible_students Student[] 

  @@map("users")
}

model Order {
  id          String     @id @default(uuid())
  table       Int
  status      Boolean    @default(false)
  draft       Boolean    @default(true)
  name        String?    // opcional 
  student     Student?   @relation(fields: [student_id], references: [id])
  student_id  String?
  create_at   DateTime?  @default(now())
  update_at   DateTime?  @default(now())
  
  items       Item[]

   @@map("orders")
}

model Student {
  id           String     @id @default(uuid())
  name         String
  plate        String
  responsible  User       @relation(fields: [responsible_id], references: [id])
  responsible_id String
  create_at    DateTime? @default(now())
  update_at    DateTime? @default(now())
  
  orders       Order[]    // Relação com os pedidos

  @@map("students")
}


model Product {
  id          String    @id @default(uuid())
  name        String
  price       Decimal   @db.Decimal(10,2)
  description String
  banner      String
  create_at   DateTime? @default(now())
  update_at   DateTime? @default(now())

  category Category @relation(fields: [category_id], references: [id])

  category_id String
  items       Item[]

  @@map("products")
}

model Category {
  id        String    @id @default(uuid())
  name      String
  create_at DateTime? @default(now())
  update_at DateTime? @default(now())

  products Product[]

  @@map("categories")
}


model Item {
  id     String @id @default(uuid())
  amount Int

  create_at DateTime? @default(now())
  update_at DateTime? @default(now())

  order   Order   @relation(fields: [order_id], references: [id])
  product Product @relation(fields: [product_id], references: [id]) 

  order_id   String
  product_id String

  @@map("items")
}
